# PIPELINE DEFINITION
# Name: deploy-model
# Inputs:
#    deployed_model_display_name: str [Default: 'bank-model-deployed']
#    endpoint_display_name: str [Default: 'bank-model-endpoint']
#    machine_type: str [Default: 'n1-standard-4']
#    project_id: str
#    region: str
#    registered_model: system.Artifact
# Outputs:
#    endpoint_uri: system.Artifact
components:
  comp-deploy-model:
    executorLabel: exec-deploy-model
    inputDefinitions:
      artifacts:
        registered_model:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        deployed_model_display_name:
          defaultValue: bank-model-deployed
          isOptional: true
          parameterType: STRING
        endpoint_display_name:
          defaultValue: bank-model-endpoint
          isOptional: true
          parameterType: STRING
        machine_type:
          defaultValue: n1-standard-4
          isOptional: true
          parameterType: STRING
        project_id:
          parameterType: STRING
        region:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        endpoint_uri:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-deploy-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - deploy_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.10.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'google-cloud-aiplatform'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef deploy_model(\n    registered_model: Input[Artifact],\n    project_id:\
          \ str,\n    region: str,\n    endpoint_uri: Output[Artifact],\n    endpoint_display_name:\
          \ str = \"bank-model-endpoint\",\n    deployed_model_display_name: str =\
          \ \"bank-model-deployed\",\n    machine_type: str = \"n1-standard-4\"\n\n\
          ):\n    import os\n    from google.cloud import aiplatform\n\n    model_uri_file\
          \ = os.path.join(registered_model.path, 'model_uri.txt')\n    with open(model_uri_file,\
          \ 'r') as f:\n        model_resource_name = f.read().strip()\n\n\n    aiplatform.init(project=project_id,\
          \ location=region)\n\n\n    model = aiplatform.Model(model_resource_name)\n\
          \n\n    endpoints = aiplatform.Endpoint.list(filter=f'display_name=\"{endpoint_display_name}\"\
          ', order_by='create_time desc')\n    if endpoints:\n        endpoint = endpoints[0]\n\
          \        print(f\"Using existing endpoint: {endpoint.name}\")\n    else:\n\
          \        endpoint = aiplatform.Endpoint.create(display_name=endpoint_display_name)\n\
          \        print(f\"Created new endpoint: {endpoint.name}\")\n\n\n    model.deploy(\n\
          \        endpoint=endpoint,\n        deployed_model_display_name=deployed_model_display_name,\n\
          \        machine_type=machine_type,\n        traffic_split={\"0\": 100}\n\
          \    )\n\n\n    os.makedirs(endpoint_uri.path, exist_ok=True)\n    endpoint_uri_file\
          \ = os.path.join(endpoint_uri.path, 'endpoint_uri.txt')\n    with open(endpoint_uri_file,\
          \ 'w') as f:\n        f.write(endpoint.resource_name)\n\n    print(f\"Model\
          \ deployed to endpoint: {endpoint.resource_name}\")\n\n"
        image: python:3.10
pipelineInfo:
  name: deploy-model
root:
  dag:
    outputs:
      artifacts:
        endpoint_uri:
          artifactSelectors:
          - outputArtifactKey: endpoint_uri
            producerSubtask: deploy-model
    tasks:
      deploy-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-deploy-model
        inputs:
          artifacts:
            registered_model:
              componentInputArtifact: registered_model
          parameters:
            deployed_model_display_name:
              componentInputParameter: deployed_model_display_name
            endpoint_display_name:
              componentInputParameter: endpoint_display_name
            machine_type:
              componentInputParameter: machine_type
            project_id:
              componentInputParameter: project_id
            region:
              componentInputParameter: region
        taskInfo:
          name: deploy-model
  inputDefinitions:
    artifacts:
      registered_model:
        artifactType:
          schemaTitle: system.Artifact
          schemaVersion: 0.0.1
    parameters:
      deployed_model_display_name:
        defaultValue: bank-model-deployed
        isOptional: true
        parameterType: STRING
      endpoint_display_name:
        defaultValue: bank-model-endpoint
        isOptional: true
        parameterType: STRING
      machine_type:
        defaultValue: n1-standard-4
        isOptional: true
        parameterType: STRING
      project_id:
        parameterType: STRING
      region:
        parameterType: STRING
  outputDefinitions:
    artifacts:
      endpoint_uri:
        artifactType:
          schemaTitle: system.Artifact
          schemaVersion: 0.0.1
schemaVersion: 2.1.0
sdkVersion: kfp-2.10.0
